/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        struct ListNode* t3=new ListNode();
        if(l1==NULL) return l2;
        if(l2==NULL) return l1;
        if(l1==NULL && l2==NULL) return NULL;
        if(l1||l2)
        {
            if(l1->val<=l2->val)
            {
                t3=l1;
                l1=t3->next;
            }
            else
            {
                t3=l2;
                l2=t3->next;
            }
        }
        ListNode* newhead=t3;
        while(l1 && l2)
        {
           
            if(l1->val<=l2->val)
            {
               t3->next=l1;
               t3=l1;
               l1=t3->next;
            }
           else{
                 t3->next=l2;
                 t3=l2;
                 l2=t3->next;
            }
        }
        if(l1==NULL){ t3->next=l2;}
        if(l2==NULL){ t3->next=l1;}
            
        return newhead;
    
    }

};
    
