class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* temp1, *temp2, *temp3;
        temp1 = l1;
        temp2 = l2;
        if (l1==NULL) return NULL;
        ListNode* head = new ListNode;
        int carry = (l1->val+l2->val)/10;
        head->val = (l1->val+l2->val)%10;
        temp1 = temp1->next;
        temp2 = temp2->next;
        temp3 = head;
        while(temp1 and temp2){
            ListNode* temp = new ListNode;
            temp->val = (temp1->val + temp2->val+carry)%10;
            carry = (temp1->val + temp2->val+carry)/10;
            temp3->next = temp;
            temp1 = temp1->next;
            temp2 = temp2->next;
            temp3 = temp3->next;
        }
        while (temp1){
            ListNode* temp = new ListNode;
            temp->val = (temp1->val+carry)%10;
            carry = (temp1->val +carry)/10;
            temp3->next = temp;
            temp1 = temp1->next;
            temp3 = temp3->next;
        }
        while (temp2){
            ListNode* temp = new ListNode;
            temp->val = (temp2->val+carry)%10;
            carry = (temp2->val +carry)/10;
            temp3->next = temp;
            temp2 = temp2->next;
            temp3 = temp3->next;
        }
        if (carry!=0){
            temp3->next = new ListNode(carry);
        }
        return head;
    }
};
