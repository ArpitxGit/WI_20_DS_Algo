class Solution {
public:
    typedef long long int ll;
    string findGreater(string A)
    {
        string s1=A;
        int len= A.length();
        string s2(len,'9');
        if(A==s2)
        {
            string s3(len-1,'0');
            string s2="1"+s3+"1";return s2;
        }
        for(int i=len-1;i>=(len-1)/2;i--)
            s1[i]=s1[len-1-i];
        int idx = (len-1)/2;
        while(s1<=A)
        {
            if(s1[idx]!='9')
            {
                s1[idx]++;
                s1[len-1-idx]=s1[idx];
            }
            else
            {
                s1[idx]='0';
                s1[len-1-idx]=s1[idx];
                idx--;
            }
        }
        return s1;
    }
    
    string findLess(string A)
    {
        if(A=="0")
            return "";
        if(A=="1")
            return "0";
        if(A=="11")
            return "9";
        string s1=A;
        int len= A.length();
        string s2(len-1,'0');
        s2.insert(s2.begin(),'1');
        if(A==s2)
        {
            string s3(len-1,'9');
            return s3;
        }
        for(int i=len-1;i>=(len-1)/2;i--)
            s1[i]=s1[len-1-i];
        int idx = (len-1)/2;
        while(s1>=A)
        {
            if(s1[idx]!='0')
            {
                if(idx==0&&s1[idx]=='1')
                {
                    s1[len-1-idx]='9';
                    s1[idx]='0';
                    while(s1.size()&&s1[0]=='0')
                        s1.erase(s1.begin());
                    return s1;
                }
                s1[idx]--;
                s1[len-1-idx]=s1[idx];
            }
            else
            {
                s1[idx]='9';
                s1[len-1-idx]=s1[idx];
                idx--;
            }
        }
        return s1;
    }
    
    string nearestPalindromic(string n) 
    {
        string temp1=findGreater(n);
        string temp2=findLess(n);

        if(temp2.empty())
            return temp1;
        ll a1=stoll(temp1);
        ll a2=stoll(temp2);
        ll val=stoll(n);
        if(a1-val>=val-a2)
            return temp2;
        return temp1;
    }
};
